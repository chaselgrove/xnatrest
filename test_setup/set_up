#!/bin/bash -e

# See file COPYING distributed with xnatrest for copyright and license.

. common

create_project()
{

    accessibility=$1
    xml=$2
    project_url=$3

    acc_url=${project_url}/accessibility/$accessibility
    curl_ $jsessionid1 -X PUT --data-binary @$xml $project_url
    curl_ $jsessionid1 -X PUT --data-binary @$xml $acc_url

    echo subject...
    subject_url=${project_url}/subjects/s1
    curl_ $jsessionid1 -X PUT --data-binary @xml/subject.xml $subject_url

    echo experiment...
    experiment_url=${subject_url}/experiments/s1e1
    curl_ $jsessionid1 \
          -X PUT \
          --data-binary @xml/experiment.xml \
          "${experiment_url}?inbody=true&xsiType=mrSessionData"

    echo scan...
    scan_url=${experiment_url}/scans/1
    curl_ $jsessionid1 \
          -X PUT \
          --data-binary @xml/scan.xml \
          "${scan_url}?inbody=true&xsiType=xnat:mrScanData"

    echo scan files...

    res_url=${scan_url}/resources/NIfTI
    file_url=${res_url}/files/anat.nii.gz
    curl_ $jsessionid1 \
          -X PUT \
          --data-binary @files/anat.nii.gz \
          "${file_url}?inbody=true"

    res_url=${scan_url}/resources/SNAPSHOTS
    file_url=${res_url}/files/BPDwoPsy_030_MR_anat_qc_t.gif
    curl_ $jsessionid1 \
          -X PUT \
          --data-binary @files/BPDwoPsy_030_MR_anat_qc_t.gif \
          "${file_url}?inbody=true"

    echo assessor...
    assessor_url=${experiment_url}/assessors/s1e1a1
    if [ $xnat_version = 1.5.0 \
         -o $xnat_version = 1.5.1 \
         -o $xnat_version = 1.5.2 \
         -o $xnat_version = 1.5.3 \
         -o $xnat_version = 1.5.4 \
         -o $xnat_version = 1.6.2 \
         -o $xnat_version = 1.6.3 ]
    then
        curl_ $jsessionid1 \
              -X PUT \
              --data-binary @xml/assessor.xml \
              "${assessor_url}"
    elif [ $xnat_version = 1.6.4 -o $xnat_version = 1.6.5 ]
    then
        curl_ $jsessionid1 \
              -X PUT \
              --data-binary @xml/assessor.xml \
              "${assessor_url}?inbody=true&xsiType=atlasScalingFactorData"
    else
        msg="internal error (version unsupported in assessor creation)"
        echo "$progname: $msg" >&2
        return 1
    fi

    echo assessor files...

    res_url=${assessor_url}/out/resources/assres
    file_url=${res_url}/files/assessor_files.zip
    curl_ $jsessionid1 \
          -X PUT \
          --data-binary @files/assessor_files.zip \
          "${file_url}?inbody=true&extract=true"

    echo reconstruction...
    reconstruction_url=${experiment_url}/reconstructions/s1e1r1
    curl_ $jsessionid1 \
          -X PUT \
          --data-binary @xml/reconstruction.xml \
          $reconstruction_url

    echo reconstruction files...

    res_url=${reconstruction_url}/out/resources/recres
    file_url=${res_url}/files/reconstruction_files.zip
    curl_ $jsessionid1 \
          -X PUT \
          --data-binary @files/reconstruction_files.zip \
          "${file_url}?inbody=true&extract=true"

    return 0

} # end create_project()

progname=`basename $0`

if [ $# -ne 2 ]
then
    echo "usage: $progname <XNAT version> <XNAT URL>"
    exit 1
fi

xnat_version="$1"

if [ x"$xnat_version" != x"1.5.0" \
     -a x"$xnat_version" != x"1.5.1" \
     -a x"$xnat_version" != x"1.5.2" \
     -a x"$xnat_version" != x"1.5.3" \
     -a x"$xnat_version" != x"1.5.4" \
     -a x"$xnat_version" != x"1.6.2" \
     -a x"$xnat_version" != x"1.6.3" \
     -a x"$xnat_version" != x"1.6.4" \
     -a x"$xnat_version" != x"1.6.5" ]
then
    echo "$progname: unsupported XNAT version" >&2
    exit 1
fi

xnat_url=`echo "$2" | sed 's+/*$++'`

jsessionid1=`get_jsessionid test1 test1`
jsessionid2=`get_jsessionid test2 test2`

echo public project...
create_project public \
               xml/public_project.xml \
               ${xnat_url}/data/archive/projects/pubp

echo private project...
create_project private \
               xml/private_project.xml \
               ${xnat_url}/data/archive/projects/privp

echo
echo exiting normally
echo

exit 0

# eof
